// <auto-generated />
using System;
using GymInfrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymInfrastructure.Migrations
{
    [DbContext(typeof(GYMDbContext))]
    [Migration("20250330153828_AddTrainingWeightsManually")]
    partial class AddTrainingWeightsManually
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymDomain.Model.BodyParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Circumferences")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BodyParameters");
                });

            modelBuilder.Entity("GymDomain.Model.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ExercisesID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Exercise__57791249084948B9");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("GymDomain.Model.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MealsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Fats")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Protein")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PK__Meals__CB2787401B946237");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("GymDomain.Model.NutritionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NutritionPlanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK__Nutritio__013DA35DE5AFDE4E");

                    b.HasIndex("UserId");

                    b.ToTable("NutritionPlan", (string)null);
                });

            modelBuilder.Entity("GymDomain.Model.NutritionPlanMeal", b =>
                {
                    b.Property<int>("NutritionPlanId")
                        .HasColumnType("int")
                        .HasColumnName("NutritionPlanID");

                    b.Property<int>("MealsId")
                        .HasColumnType("int")
                        .HasColumnName("MealsID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("NutritionPlanId", "MealsId")
                        .HasName("PK__Nutritio__1D8FDB29C19836F1");

                    b.HasIndex("MealsId");

                    b.ToTable("NutritionPlan_Meals", (string)null);
                });

            modelBuilder.Entity("GymDomain.Model.PhotoEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PhotoEntries");
                });

            modelBuilder.Entity("GymDomain.Model.ProgressHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ProgressHistories");
                });

            modelBuilder.Entity("GymDomain.Model.ProgressTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProgressTrackingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Circumferences")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PK__Progress__4BFF4BABC44B65EC");

                    b.HasIndex("UserId");

                    b.ToTable("ProgressTracking", (string)null);
                });

            modelBuilder.Entity("GymDomain.Model.TrainingPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TrainingPlanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK__Training__80FCC59314B3A981");

                    b.HasIndex("UserId");

                    b.ToTable("TrainingPlan", (string)null);
                });

            modelBuilder.Entity("GymDomain.Model.TrainingPlanExercise", b =>
                {
                    b.Property<int>("TrainingPlanId")
                        .HasColumnType("int")
                        .HasColumnName("TrainingPlanID");

                    b.Property<int>("ExercisesId")
                        .HasColumnType("int")
                        .HasColumnName("ExercisesID");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int>("Sets")
                        .HasColumnType("int");

                    b.HasKey("TrainingPlanId", "ExercisesId")
                        .HasName("PK__Training__058B54B778F7C4DD");

                    b.HasIndex("ExercisesId");

                    b.ToTable("TrainingPlan_Exercises", (string)null);
                });

            modelBuilder.Entity("GymDomain.Model.TrainingWeight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TrainingWeights");
                });

            modelBuilder.Entity("GymDomain.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Users__1788CCACF95D5112");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105340A9351BE")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GymDomain.Model.BodyParameter", b =>
                {
                    b.HasOne("GymDomain.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymDomain.Model.NutritionPlan", b =>
                {
                    b.HasOne("GymDomain.Model.User", "User")
                        .WithMany("NutritionPlans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Nutrition__UserI__3A81B327");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymDomain.Model.NutritionPlanMeal", b =>
                {
                    b.HasOne("GymDomain.Model.Meal", "Meals")
                        .WithMany("NutritionPlanMeals")
                        .HasForeignKey("MealsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Nutrition__Meals__403A8C7D");

                    b.HasOne("GymDomain.Model.NutritionPlan", "NutritionPlan")
                        .WithMany("NutritionPlanMeals")
                        .HasForeignKey("NutritionPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Nutrition__Nutri__3F466844");

                    b.Navigation("Meals");

                    b.Navigation("NutritionPlan");
                });

            modelBuilder.Entity("GymDomain.Model.PhotoEntry", b =>
                {
                    b.HasOne("GymDomain.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymDomain.Model.ProgressHistory", b =>
                {
                    b.HasOne("GymDomain.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymDomain.Model.ProgressTracking", b =>
                {
                    b.HasOne("GymDomain.Model.User", "User")
                        .WithMany("ProgressTrackings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ProgressT__UserI__4BAC3F29");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymDomain.Model.TrainingPlan", b =>
                {
                    b.HasOne("GymDomain.Model.User", "User")
                        .WithMany("TrainingPlans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TrainingP__UserI__4316F928");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymDomain.Model.TrainingPlanExercise", b =>
                {
                    b.HasOne("GymDomain.Model.Exercise", "Exercises")
                        .WithMany("TrainingPlanExercises")
                        .HasForeignKey("ExercisesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TrainingP__Exerc__48CFD27E");

                    b.HasOne("GymDomain.Model.TrainingPlan", "TrainingPlan")
                        .WithMany("TrainingPlanExercises")
                        .HasForeignKey("TrainingPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TrainingP__Train__47DBAE45");

                    b.Navigation("Exercises");

                    b.Navigation("TrainingPlan");
                });

            modelBuilder.Entity("GymDomain.Model.TrainingWeight", b =>
                {
                    b.HasOne("GymDomain.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymDomain.Model.Exercise", b =>
                {
                    b.Navigation("TrainingPlanExercises");
                });

            modelBuilder.Entity("GymDomain.Model.Meal", b =>
                {
                    b.Navigation("NutritionPlanMeals");
                });

            modelBuilder.Entity("GymDomain.Model.NutritionPlan", b =>
                {
                    b.Navigation("NutritionPlanMeals");
                });

            modelBuilder.Entity("GymDomain.Model.TrainingPlan", b =>
                {
                    b.Navigation("TrainingPlanExercises");
                });

            modelBuilder.Entity("GymDomain.Model.User", b =>
                {
                    b.Navigation("NutritionPlans");

                    b.Navigation("ProgressTrackings");

                    b.Navigation("TrainingPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
